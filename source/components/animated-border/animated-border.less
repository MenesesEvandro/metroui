@import "../../include/vars";

@property --border-spin-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

:root {
    --animated-border-speed: 3s;
    --animated-border-color-1: #ff4545;
    --animated-border-color-2: #00ff99;
    --animated-border-color-3: #006aff;
    --animated-border-color-4: #ff0095;
    --animated-border-color-5: #ff4545;
}

.animated-border, [class*=animated-border-] {
    position: relative;

    &::after, &::before {
        content: '';
        position: absolute;
        background-image: conic-gradient(
                from var(--border-spin-angle),
                var(--animated-border-color-1),
                var(--animated-border-color-2),
                var(--animated-border-color-3),
                var(--animated-border-color-4),
                var(--animated-border-color-5)
        );
        z-index: -1;
        padding: 3px;
        border-radius: inherit;
        inset: -2px;
        animation: var(--animated-border-speed) spin-border linear infinite;
    }
    &::before {
        filter: blur(.5rem);
        opacity: .5;
    }
}

.animated-border-hover {
    &::after, &::before {
        background-image: initial;
        transition: opacity .5s;
        opacity: 0;
    }
    &:hover {
        &::after, &::before {
            opacity: 1;
            background-image: conic-gradient(
                    from var(--border-spin-angle), 
                    #ff4545, 
                    #00ff99, 
                    #006aff, 
                    #ff0095, 
                    #ff4545
            );
        }
    }
}

@keyframes spin-border {
    from{
        --border-spin-angle: 0deg;
    }
    to{
        --border-spin-angle: 360deg;
    }
}

each(@normalColors, {
    @c2: darken(@@value, 10%);
    @c3: darken(@@value, 70%);
    .animated-border-@{value} {
        &::after, &::before {
            background-image: 
                    conic-gradient(from var(--border-spin-angle), @c2, @c3, transparent, @@value);
        }
    }
})

@property --border-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: true;
}

:root {
    --ani-border-color: #50a8ff;
    --ani-border-size: 2px;
}

.ani-border, [class*=ani-border-] {
    &::before {
        content: "";
        position: absolute;
        width: calc(100% + var(--ani-border-size) * 2);
        height: calc(100% + var(--ani-border-size) * 2);
        background: repeating-conic-gradient(
                from var(--border-angle),
                var(--ani-border-color) 0%,
                var(--ani-border-color) 5%,
                transparent 5%,
                transparent 40%,
                var(--ani-border-color) 50%
        );
        border-radius: inherit;
        animation: rotate-gradient 4s linear infinite;
        inset: calc(-1 * var(--ani-border-size));
        z-index: -1;
    }
}

@keyframes rotate-gradient {
    0% {
        --border-angle: 0deg;
    }
    100% {
        --border-angle: 360deg;
    }
}

each(@normalColors, {
    .ani-border-@{value} {
        --ani-border-color: @@value;
    }
})

.ani-border-hover {
    &::before {
        background: initial;
        transition: opacity .5s;
        opacity: 0;
    }
    &:hover {
        &::before {
            opacity: 1;
            background: repeating-conic-gradient(
                    from var(--border-angle),
                    var(--ani-border-color) 0%,
                    var(--ani-border-color) 5%,
                    transparent 5%,
                    transparent 40%,
                    var(--ani-border-color) 50%
            );
        }
    }
}